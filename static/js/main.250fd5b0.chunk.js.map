{"version":3,"sources":["components/FieldEntry.js","components/Graph.js","components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["FieldEntry","props","state","value","result","list","handleChange","bind","handleSubmit","event","this","setState","target","passToContainer","preventDefault","SubmitButton","isLoading","Button","className","variant","type","disabled","Spinner","as","animation","size","role","aria-hidden","Form","onSubmit","Group","controlId","Row","Col","Label","visuallyHidden","Control","onChange","placeholder","React","Component","Graph","data","options","scale","ticks","beginAtZero","formatTimestamp","timeStamp","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","tConvert","time","toString","match","length","slice","join","substr","Container","testData","labels","datasets","label","backgroundColor","borderColor","borderWidth","checkErrors","response","ok","message","status","setLoading","Error","getData","username","a","fetch","Accept","ratesResponse","json","rates","console","log","rate","remaining","reset","alert","repoResponse","repos","repoList","repo","langUrl","languages_url","push","dataList","Object","entries","key","undefined","useState","loading","entry","then","results","keys","values","catch","error","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.250fd5b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\nimport { Form, Button, Row, Col, Spinner } from \"react-bootstrap\";\r\n\r\nclass FieldEntry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: \"\" };\r\n    this.result = { value: \"\" };\r\n    this.list = [];\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    // this.props.passToContainer(this.list);\r\n    this.props.passToContainer(this.state.value);\r\n    event.preventDefault();\r\n  }\r\n  render() {\r\n    const SubmitButton = () => {\r\n      if (this.props.isLoading === true)\r\n        return (\r\n          <Button\r\n            className=\"FieldEntry-input\"\r\n            variant=\"secondary\"\r\n            type=\"submit\"\r\n            disabled\r\n          >\r\n            <div>\r\n              Loading...\r\n              <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            </div>\r\n          </Button>\r\n        );\r\n      else\r\n        return (\r\n          <Button\r\n            className=\"FieldEntry-input\"\r\n            variant=\"secondary\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        );\r\n    };\r\n    return (\r\n      <div>\r\n        <header className=\"App-header\">\r\n          <div>\r\n            <p>\r\n              Enter a GitHub username to see a graphical overview of all the\r\n              languages used across its (public) repositories.\r\n            </p>\r\n          </div>\r\n        </header>\r\n        <Form className=\"FieldEntry-input\" onSubmit={this.handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Row className=\"align-items-center\">\r\n              <Col>\r\n                <Form.Label visuallyHidden>GitHub Username</Form.Label>\r\n              </Col>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Control\r\n                    value={this.state.value}\r\n                    onChange={this.handleChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter username\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <SubmitButton />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FieldEntry;\r\n","import React from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport \"../App.css\";\r\n\r\nconst Graph = (props) => {\r\n  const options = {\r\n    scale: {\r\n      ticks: { beginAtZero: true },\r\n    },\r\n  };\r\n  return (\r\n    <div className=\"Graph-container\">\r\n      <Pie data={props.data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import FieldEntry from \"./FieldEntry\";\r\nimport Graph from \"./Graph\";\r\nimport { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst formatTimestamp = (timeStamp) => {\r\n  let date = new Date(timeStamp * 1000);\r\n  let hours = date.getHours();\r\n  let minutes = \"0\" + date.getMinutes();\r\n  let seconds = \"0\" + date.getSeconds();\r\n  function tConvert(time) {\r\n    // Check correct time format and split into components\r\n    time = time\r\n      .toString()\r\n      .match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      // If time format correct\r\n      time = time.slice(1); // Remove full string match value\r\n      time[5] = +time[0] < 12 ? \" AM\" : \" PM\"; // Set AM/PM\r\n      time[0] = +time[0] % 12 || 12; // Adjust hours\r\n    }\r\n    return time.join(\"\"); // return adjusted time or original string\r\n  }\r\n\r\n  tConvert(\"18:00:00\");\r\n  return tConvert(hours + \":\" + minutes.substr(-2) + \":\" + seconds.substr(-2));\r\n};\r\n\r\nfunction Container() {\r\n  let testData = {\r\n    labels: [\"JavaScript\", \"Python\", \"Java\", \"Perl\", \"Vue\", \"SQL\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of bytes written in a language\",\r\n        data: [36314, 25975, 58461, 4543, 12345, 8000],\r\n        backgroundColor: [\r\n          \"rgba(245, 122, 151, 0.2)\",\r\n          \"rgba(110, 148, 245, 0.2)\",\r\n          \"rgba(245, 173, 135, 0.2)\",\r\n          \"rgba(135, 245, 151, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(245, 217, 147, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(245, 122, 151, 1)\",\r\n          \"rgba(110, 148, 245, 1)\",\r\n          \"rgba(245, 173, 135, 1)\",\r\n          \"rgba(135, 245, 151, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(245, 217, 147, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  const checkErrors = (response) => {\r\n    if (!response.ok) {\r\n      const message = `An error has occured: ${response.status}`;\r\n      setLoading(false);\r\n      throw new Error(message);\r\n    }\r\n  };\r\n  const getData = async (username) => {\r\n    setLoading(true);\r\n    const ratesResponse = await fetch(\"https://api.github.com/rate_limit\", {\r\n      Accept: \"application/vnd.github.v3+json\",\r\n    });\r\n    checkErrors(ratesResponse);\r\n    const rates = await ratesResponse.json();\r\n    console.log(\r\n      `Data rate remaining: ${rates.rate.remaining} \\n`,\r\n      `Rate will reset at: ${formatTimestamp(rates.rate.reset)}`\r\n    );\r\n    if (rates.rate.remaining === 0) {\r\n      setLoading(false);\r\n      return alert(\r\n        `GitHub API rate limit exceeded. Please wait till ${formatTimestamp(\r\n          rates.rate.reset\r\n        )} to try again, or login with your GitHub account to increase your rate limit.`\r\n      );\r\n    }\r\n    const repoResponse = await fetch(\r\n      `https://api.github.com/users/${username}/repos`,\r\n      {\r\n        Accept: \"application/vnd.github.v3+json\",\r\n      }\r\n    );\r\n    checkErrors(repoResponse);\r\n    const repos = await repoResponse.json();\r\n    if (repos.length === 0) {\r\n      setLoading(false);\r\n      return alert(\r\n        \"No repositories with detectable languages were found for this username.\"\r\n      );\r\n    }\r\n    let repoList = [];\r\n    for (let repo of repos) {\r\n      let langUrl = repo.languages_url;\r\n      let response = await fetch(langUrl, {\r\n        Accept: \"application/vnd.github.v3+json\",\r\n      });\r\n      checkErrors(response);\r\n      response = await response.json();\r\n      repoList.push(response);\r\n    }\r\n    let dataList = {};\r\n    for (let repo of repoList) {\r\n      if (repo.length > 0) continue;\r\n      else\r\n        for (const [key, value] of Object.entries(repo)) {\r\n          if (dataList[key] !== undefined) {\r\n            dataList[key] = dataList[key] + value;\r\n          } else dataList[key] = value;\r\n        }\r\n    }\r\n    setLoading(false);\r\n    return dataList;\r\n  };\r\n  let data = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"\",\r\n        data: [],\r\n        backgroundColor: [\r\n          \"rgba(245, 122, 151, 0.2)\",\r\n          \"rgba(110, 148, 245, 0.2)\",\r\n          \"rgba(245, 173, 135, 0.2)\",\r\n          \"rgba(135, 245, 151, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(245, 217, 147, 0.2)\",\r\n          \"rgba(280, 90, 151, 0.2)\",\r\n          \"rgba(50, 148, 245, 0.2)\",\r\n          \"rgba(245, 200, 90, 0.2)\",\r\n          \"rgba(90, 230, 151, 0.2)\",\r\n          \"rgba(180, 102, 255, 0.2)\",\r\n          \"rgba(245, 200, 110, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(245, 122, 151, 1)\",\r\n          \"rgba(110, 148, 245, 1)\",\r\n          \"rgba(245, 173, 135, 1)\",\r\n          \"rgba(135, 245, 151, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(245, 217, 147, 1)\",\r\n          \"rgba(280, 90, 151, 1)\",\r\n          \"rgba(50, 148, 245, 1)\",\r\n          \"rgba(245, 200, 90, 1)\",\r\n          \"rgba(90, 230, 151, 1)\",\r\n          \"rgba(180, 102, 255, 1)\",\r\n          \"rgba(245, 200, 110, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  const [state, setState] = useState(testData);\r\n  const [loading, setLoading] = useState(false);\r\n  const fieldEntryCallback = (entry) => {\r\n    getData(entry)\r\n      .then((results) => {\r\n        let keys = Object.keys(results);\r\n        let values = Object.values(results);\r\n        data.labels = keys;\r\n        // data.datasets[0].label = \"Repository Programming Languages\";\r\n        data.datasets[0].data = values;\r\n        // console.log(data.datasets.data);\r\n        // console.log(testData);\r\n        setState(data);\r\n      })\r\n      .catch((error) => error.message);\r\n  };\r\n\r\n  const testCallback = () => {\r\n    setState(testData);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"App-body\">\r\n        <Graph data={state} />\r\n        <FieldEntry isLoading={loading} passToContainer={fieldEntryCallback} />\r\n        {/* <form action=\"https://github.com/login/oauth/authorize\" method=\"get\">\r\n          <input type=\"submit\">Login with GitHub</input>\r\n        </form> */}\r\n        {/* <Form>\r\n          <Button type=\"submit\">Login with GitHub</Button>\r\n        </Form> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import \"./App.css\";\n// import FieldEntry from \"./components/FieldEntry\";\n// import Graph from \"./components/Graph\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"./components/Container\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}